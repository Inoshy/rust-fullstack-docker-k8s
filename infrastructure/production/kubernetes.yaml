kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-volumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: search-volumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rust-fullstack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rust-fullstack
  template:
    metadata:
      labels:
        app: rust-fullstack
        tier: backend
        environment: production
    spec:
      containers:
        - name: rust-fullstack-container
          workingDir: /var/www
          image: camsjams/rust_fullstack_docker_k8s:0.1.0
          env:
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "2020"
            - name: DATABASE_URL
              value: "mysql://user:todochangepassword@localhost:3306/rust_fullstack"
            - name: REDIS_URL
              value: localhost:6379
            - name: MEILISEARCH_URL
              value: http://localhost:7700
            - name: RUST_LOG
              value: rust_fullstack_docker_k8s=info,actix=info
          ports:
          - containerPort: 2020
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          # detect when application can be sent traffic after deployment
          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /ping
          #     port: 2020
          #     scheme: HTTP
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1
          # # detect when application needs to be restarted
          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /ping
          #     port: 2020
          #     scheme: HTTP
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1
        - name: search
          image: getmeili/meilisearch:v0.13.0
          ports:
          - containerPort: 7700
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
            - name: meilisearch-persistent-storage
              mountPath: /data.ms
        - name: redis
          image: redis
          ports:
          - containerPort: 6379
          resources:
            requests:
              cpu: 25m
              memory: 200Mi
        - name: mysql
          image: mysql:5.7.30
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: todochangerootpassword
            - name: MYSQL_DATABASE
              value: rust_fullstack
            - name: MYSQL_USER
              value: user
            - name: MYSQL_PASSWORD
              value: todochangepassword
          ports:
          - name: mysql
            containerPort: 3306
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
            subPath: mysql
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-volumeclaim
        - name: meilisearch-persistent-storage
          persistentVolumeClaim:
            claimName: search-volumeclaim
---
apiVersion: v1
kind: Service
metadata:
  name: rust-fullstack-svc
  labels:
    app: rust-fullstack-svc
    tier: backend
    resourceName: fullstack
  annotations:
    dev.okteto.com/auto-ingress: "private"
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: fullstack-port
    targetPort: 2020
    protocol: TCP
  selector:
    app: rust-fullstack
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: rust-redis-svc
  labels:
    app: rust-redis-svc
    tier: backend
  annotations:
    dev.okteto.com/auto-ingress: "private"
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: rust-fullstack
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: rust-search-svc
  labels:
    app: rust-search-svc
    tier: backend
  annotations:
    dev.okteto.com/auto-ingress: "private"
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: search-port
    targetPort: 7700
    protocol: TCP
  selector:
    app: rust-fullstack
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  labels:
    app: mysql-svc
spec:
  type: NodePort
  selector:
    app: rust-fullstack
    tier: backend
  ports:
  - protocol: TCP
    targetPort: 3306
    port: 3306
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rust-fullstack
  annotations:
    dev.okteto.com/generate-host: "true"
spec:
  rules:
  - http:
      paths:
      - path: /indexes/cars/search
        backend:
          serviceName: rust-search-svc
          servicePort: 80
      - path: /
        backend:
          serviceName: rust-fullstack-svc
          servicePort: 80
